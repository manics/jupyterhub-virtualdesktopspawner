# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions

name: Build
on:
  push:
  pull_request:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  # https://github.com/pre-commit/action
  pre-commit:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0

  test:
    name: Test
    strategy:
      # Keep running so we can see if other tests pass
      fail-fast: false
      matrix:
        python:
          - "3.10"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"
          cache: pip
          cache-dependency-path: "*requirements.txt"

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          python -m pip install -r dev-requirements.txt
          npm install -g configurable-http-proxy

      - name: Run tests
        run: |
          ./ci/run-localstack.sh -d
          sleep 10
          python -m pytest tests -vs

  container:
    name: Container
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: latest=false
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/jupyterhub-virtualdesktopspawner

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to container registry
        uses: docker/build-push-action@v5
        with:
          build-args: |
            SETUPTOOLS_SCM_PRETEND_VERSION=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '0.0.0'  }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

  # https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  publish-pypi:
    name: Pypi
    needs:
      # Only publish if other jobs passed
      - pre-commit
      - test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build package
        run: |
          python -mpip install build
          python -mbuild .

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          # TODO: Use OIDC https://github.com/github/docs/pull/24772/files
          password: ${{ secrets.PYPI_PASSWORD }}
